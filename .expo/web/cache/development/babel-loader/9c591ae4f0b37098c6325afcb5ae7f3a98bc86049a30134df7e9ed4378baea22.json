{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch('https://fakestoreapi.com/auth/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: username,\n            password: password\n          })\n        });\n        if (response.ok) {\n          var data = yield response.json();\n          console.log('Đăng nhập thành công. Token:', data.token);\n          navigation.navigate('Home');\n        } else {\n          console.log('Đăng nhập thất bại');\n          Alert.alert('Đăng nhập thất bại', 'Vui lòng kiểm tra lại thông tin đăng nhập.');\n        }\n      } catch (error) {\n        console.error('Lỗi khi đăng nhập:', error);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Login\"\n    }), _jsx(TextInput, {\n      placeholder: \"Username\",\n      value: username,\n      onChangeText: setUsername,\n      style: styles.input\n    }), _jsx(TextInput, {\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true,\n      style: styles.input\n    }), _jsx(Button, {\n      title: \"Login\",\n      onPress: handleLogin\n    }), _jsx(Button, {\n      title: \"Register\",\n      onPress: handleRegister\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    width: 200,\n    margin: 10,\n    padding: 8\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","Alert","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","handleLogin","_ref2","_asyncToGenerator","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","token","navigate","alert","error","apply","arguments","style","styles","container","children","placeholder","value","onChangeText","input","secureTextEntry","title","onPress","handleRegister","create","flex","justifyContent","alignItems","height","borderColor","borderWidth","width","margin","padding"],"sources":["C:/DiaD/HocHanh/ReactNative/Example03/component/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, Button, StyleSheet, Alert } from 'react-native';\n\nconst LoginScreen = ({ navigation }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('https://fakestoreapi.com/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password,\n        }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Đăng nhập thành công. Token:', data.token);\n        navigation.navigate('Home');\n        // Lưu token vào trạng thái ứng dụng hoặc AsyncStorage để sử dụng sau này\n        // Ví dụ: AsyncStorage.setItem('token', data.token);\n        // Sau đó, bạn có thể điều hướng người dùng đến màn hình chính hoặc thực hiện các thao tác khác.\n      } else {\n        console.log('Đăng nhập thất bại');\n        Alert.alert('Đăng nhập thất bại', 'Vui lòng kiểm tra lại thông tin đăng nhập.');\n        // Xử lý khi đăng nhập thất bại, ví dụ: hiển thị thông báo lỗi\n      }\n    } catch (error) {\n      console.error('Lỗi khi đăng nhập:', error);\n    }\n  }\n  return (\n    <View style={styles.container}>\n      <Text>Login</Text>\n      <TextInput\n        placeholder=\"Username\"\n        value={username}\n        onChangeText={setUsername}\n        style={styles.input}\n      />\n      <TextInput\n        placeholder=\"Password\"\n        value={password}\n        onChangeText={setPassword}\n        secureTextEntry\n        style={styles.input}\n      />\n      <Button title=\"Login\" onPress={handleLogin} />\n      <Button title=\"Register\" onPress={handleRegister} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    width: 200,\n    margin: 10,\n    padding: 8,\n  },\n});\n\nexport default LoginScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}