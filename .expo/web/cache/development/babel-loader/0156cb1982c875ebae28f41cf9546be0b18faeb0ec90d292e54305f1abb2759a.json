{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RegisterScreen = function RegisterScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmPassword = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var navigation = useNavigation();\n  var handleRegister = function handleRegister() {\n    if (username && password && confirmPassword && password === confirmPassword) {\n      console.log(\"Registration successful\");\n      navigation.navigate('Product');\n    } else {\n      alert(\"Vui lòng nhập đầy đủ thông tin và đảm bảo mật khẩu trùng khớp.\");\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"\\u0110\\u0103ng k\\xFD\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"T\\xEAn ng\\u01B0\\u1EDDi d\\xF9ng\",\n      onChangeText: function onChangeText(text) {\n        return setUsername(text);\n      },\n      value: username\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"M\\u1EADt kh\\u1EA9u\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      value: password\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"X\\xE1c nh\\u1EADn m\\u1EADt kh\\u1EA9u\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setConfirmPassword(text);\n      },\n      value: confirmPassword\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleRegister,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"\\u0110\\u0103ng k\\xFD\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.loginLink,\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      },\n      children: _jsx(Text, {\n        style: styles.loginText,\n        children: \"\\u0110\\xE3 c\\xF3 t\\xE0i kho\\u1EA3n? \\u0110\\u0103ng nh\\u1EADp ngay\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(255, 255, 255, 0.8)\"\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n    color: \"black\"\n  },\n  input: {\n    width: \"80%\",\n    height: 40,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 10,\n    backgroundColor: \"white\"\n  },\n  button: {\n    backgroundColor: \"blue\",\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10\n  },\n  buttonText: {\n    color: \"white\",\n    textAlign: \"center\",\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  loginLink: {\n    marginTop: 20\n  },\n  loginText: {\n    color: \"blue\",\n    fontSize: 16\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","ImageBackground","useNavigation","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","navigation","handleRegister","console","log","navigate","alert","style","styles","container","children","title","input","placeholder","onChangeText","text","value","secureTextEntry","button","onPress","buttonText","loginLink","loginText","create","backgroundImage","flex","resizeMode","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginBottom","color","width","height","borderColor","borderWidth","padding","borderRadius","marginTop","textAlign"],"sources":["C:/DiaD/HocHanh/ReactNative/Example03/component/RegisterScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, ImageBackground } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst RegisterScreen = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const navigation = useNavigation();\n\n  const handleRegister = () => {\n    if (username && password && confirmPassword && password === confirmPassword) {\n      // Perform registration logic here\n      console.log(\"Registration successful\");\n      // Navigate to another screen if needed\n      navigation.navigate('Product');\n    } else {\n      alert(\"Vui lòng nhập đầy đủ thông tin và đảm bảo mật khẩu trùng khớp.\");\n    }\n  };\n\n  return (\n \n      <View style={styles.container}>\n        <Text style={styles.title}>Đăng ký</Text>\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Tên người dùng\"\n          onChangeText={(text) => setUsername(text)}\n          value={username}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Mật khẩu\"\n          secureTextEntry={true}\n          onChangeText={(text) => setPassword(text)}\n          value={password}\n        />\n\n        <TextInput\n          style={styles.input}\n          placeholder=\"Xác nhận mật khẩu\"\n          secureTextEntry={true}\n          onChangeText={(text) => setConfirmPassword(text)}\n          value={confirmPassword}\n        />\n\n        <TouchableOpacity style={styles.button} onPress={handleRegister}>\n          <Text style={styles.buttonText}>Đăng ký</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity style={styles.loginLink} onPress={() => navigation.navigate('Login')}>\n          <Text style={styles.loginText}>Đã có tài khoản? Đăng nhập ngay</Text>\n        </TouchableOpacity>\n      </View>\n   \n  );\n};\n\nconst styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\",\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(255, 255, 255, 0.8)\", // Semi-transparent white background for better readability\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n    color: \"black\", // Text color on top of the image\n  },\n  input: {\n    width: \"80%\",\n    height: 40,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 10,\n    backgroundColor: \"white\", // White background for input fields\n  },\n  button: {\n    backgroundColor: \"blue\",\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10,\n  },\n  buttonText: {\n    color: \"white\",\n    textAlign: \"center\",\n    fontSize: 16,\n    fontWeight: \"bold\",\n},\n  loginLink: {\n    marginTop: 20,\n  },\n  loginText: {\n    color: \"blue\",\n    fontSize: 16,\n  },\n});\n\nexport default RegisterScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}